commit 3787daaeb6ec43ed3b51b8f89441ed641215bebc
Author: Thiago Marcos P. Santos <thiago@mapbox.com>
Date:   Thu May 5 01:07:20 2016 +0300

    [Qt] Use Qt native image decoders
    
    Pull less dependencies.

diff --git a/platform/qt/platform.gyp b/platform/qt/platform.gyp
index dc43e02..6df9c7d 100644
--- a/platform/qt/platform.gyp
+++ b/platform/qt/platform.gyp
@@ -39,7 +39,6 @@
       'sources': [
         '../default/asset_file_source.cpp',
         '../default/default_file_source.cpp',
-        '../default/jpeg_reader.cpp',
         '../default/log_stderr.cpp',
         '../default/mbgl/storage/offline.cpp',
         '../default/mbgl/storage/offline_database.cpp',
@@ -48,7 +47,6 @@
         '../default/sqlite3.cpp',
         '../default/string_stdlib.cpp',
         '../default/thread.cpp',
-        '../default/webp_reader.cpp',
         'include/qmapbox.hpp',
         'include/qmapboxgl.hpp',
         'include/qquickmapboxgl.hpp',
@@ -75,7 +73,6 @@
       'variables': {
         'cflags': [
           '<@(boost_cflags)',
-          '<@(libjpeg-turbo_cflags)',
           '<@(nunicode_cflags)',
           '<@(opengl_cflags)',
           '<@(qt_core_cflags)',
@@ -83,25 +80,20 @@
           '<@(qt_network_cflags)',
           '<@(rapidjson_cflags)',
           '<@(sqlite_cflags)',
-          '<@(webp_cflags)',
           '-fPIC',
         ],
         'ldflags': [
-          '<@(libjpeg-turbo_ldflags)',
           '<@(nunicode_ldflags)',
           '<@(opengl_ldflags)',
           '<@(qt_core_ldflags)',
           '<@(qt_gui_ldflags)',
           '<@(qt_network_ldflags)',
           '<@(sqlite_ldflags)',
-          '<@(webp_ldflags)',
           '<@(zlib_ldflags)',
         ],
         'libraries': [
           '<@(nunicode_static_libs)',
           '<@(sqlite_static_libs)',
-          '<@(libjpeg-turbo_static_libs)',
-          '<@(webp_static_libs)',
           '<@(zlib_static_libs)',
         ],
       },
diff --git a/platform/qt/scripts/configure.sh b/platform/qt/scripts/configure.sh
index b7807bd..4d172bc 100644
--- a/platform/qt/scripts/configure.sh
+++ b/platform/qt/scripts/configure.sh
@@ -5,14 +5,12 @@ BOOST_VERSION=1.60.0
 GEOMETRY_VERSION=0.1.0
 GEOJSONVT_VERSION=4.1.2
 GTEST_VERSION=1.7.0
-LIBJPEG_TURBO_VERSION=1.4.2
 NUNICODE_VERSION=1.6
 PIXELMATCH_VERSION=0.9.0
 RAPIDJSON_VERSION=1.0.2
 SQLITE_VERSION=3.9.1
 VARIANT_VERSION=1.1.0
 ZLIB_VERSION=system
-WEBP_VERSION=0.5.0
 
 function print_default_flags {
     CONFIG+="    'cflags': $(quote_flags -fvisibility=hidden),"$LN
diff --git a/platform/qt/src/image.cpp b/platform/qt/src/image.cpp
index 816b3d7..87eb884 100644
--- a/platform/qt/src/image.cpp
+++ b/platform/qt/src/image.cpp
@@ -19,30 +19,10 @@ std::string encodePNG(const PremultipliedImage& pre) {
     return std::string(array.constData(), array.size());
 }
 
-PremultipliedImage decodeJPEG(const uint8_t*, size_t);
-PremultipliedImage decodeWebP(const uint8_t*, size_t);
-
 PremultipliedImage decodeImage(const std::string& string) {
     const uint8_t* data = reinterpret_cast<const uint8_t*>(string.data());
     const size_t size = string.size();
 
-    // FIXME: Use Qt WebP decoder plugin.
-    if (size >= 12) {
-        uint32_t riff_magic = (data[0] << 24) | (data[1] << 16) | (data[2] << 8) | data[3];
-        uint32_t webp_magic = (data[8] << 24) | (data[9] << 16) | (data[10] << 8) | data[11];
-        if (riff_magic == 0x52494646 && webp_magic == 0x57454250) {
-            return decodeWebP(data, size);
-        }
-    }
-
-    // Use libjpeg-turbo rather than the built-in version of libjpeg.
-    if (size >= 2) {
-        uint16_t magic = ((data[0] << 8) | data[1]) & 0xffff;
-        if (magic == 0xFFD8) {
-            return decodeJPEG(data, size);
-        }
-    }
-
     QImage image =
         QImage::fromData(data, size)
         .rgbSwapped()
diff --git a/src/mbgl/util/mapbox.cpp b/src/mbgl/util/mapbox.cpp
index 91d9b80..457feff 100644
--- a/src/mbgl/util/mapbox.cpp
+++ b/src/mbgl/util/mapbox.cpp
@@ -153,13 +153,6 @@ std::string canonicalizeTileURL(const std::string& url, SourceType type, uint16_
     auto tileset = url.substr(tilesetStartIdx, tilesetEndIdx - tilesetStartIdx);
     auto extension = url.substr(extensionIdx + 1, queryIdx - extensionIdx - 1);
 
-#if !defined(__ANDROID__) && !defined(__APPLE__)
-    // Replace PNG with WebP.
-    if (extension == "png") {
-        extension = "webp";
-    }
-#endif // !defined(__ANDROID__) && !defined(__APPLE__)
-
     std::string result = "mapbox://tiles/" + tileset + "/{z}/{x}/{y}";
 
     if (type == SourceType::Raster) {
